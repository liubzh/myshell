#!/bin/bash

# MacOS: Darwin, Windows: MINGW, Default: Linux
THE_OS=$(uname)

# My shell scripts evironment variable. It's important.
export MYSHELLDIR="${HOME}/myshell"
export MYSHELLDATADIR="${HOME}/myshell_data"
export MYPROJECTDIR="${HOME}/Projects"
if [ ! -d ${MYSHELLDIR} ]; then
    echo -e "\\033[31m${MYSHELLDIR} 目录不存在，操作失败\\033[0m"
    return 0
fi

# Source all of the sh files under the path $param1. It's not recursive.
# param1: specify the file path to execute source.
function my_source()
{
    if [ -z "$1" ]; then
        echo -e "\\033[31m参数错误！［Function:my_source of source file.］\\033[0m"
        return 0
    fi
    for file in `ls $1`; do
        source "$1/$file"
    done
}

LOCALIZATION_ENABLED=true
# Config the supporting of localization
function gettxt() {
    if [ -z "$(which gettext)" ]; then
        echo "$@"  # 判断 gettext 是否可用
        return 1
    fi
    if $LOCALIZATION_ENABLED; then
        gettext -s "$@"
    else
        echo "$@"
    fi
}

# source the files in MYSHELLDIR/utils/
#my_source ${MYSHELLDIR}/utils
source ${MYSHELLDIR}/utils/util
source ${MYSHELLDIR}/utils/colored_echo.sh

# Add executive files to PATH
export PATH=${MYSHELLDIR}/sh:$PATH
export PATH=${MYSHELLDIR}/sh_gn:$PATH
export PATH=${MYSHELLDIR}/xg:$PATH

# Add markdown to PATH
export PATH=${MYSHELLDIR}/markdown:$PATH

# alias check returned error number from function.
alias chk_return='if (( 0 != $? )); then return 1; fi'

# Commands.
MYCOMMANDDIR="${MYSHELLDIR}/commands"
alias b="cd -"
alias c="source ${MYCOMMANDDIR}/cd"
alias f="source ${MYCOMMANDDIR}/find"
alias g="source ${MYCOMMANDDIR}/grep"
#alias n="source ${MYCOMMANDDIR}/nautilus"
alias v="source ${MYCOMMANDDIR}/vim"
alias add-f="source ${MYCOMMANDDIR}/add-f"
#alias add-phone="source ${MYCOMMANDDIR}/add-phone"
#alias rm-f="source ${MYCOMMANDDIR}/rm-f"
#alias share="source ${MYCOMMANDDIR}/share"
#alias switch-git="source ${MYCOMMANDDIR}/switch-git"
#alias switch-locale="source ${MYCOMMANDDIR}/switch-locale"

# sh
#alias adb="${MYSHELLDIR}/sh/adb.sh"

# gn
#MYGNDIR="${MYSHELLDIR}/gn"
#alias m="source ${MYGNDIR}/make"
#alias switch-proj="source ${MYGNDIR}/switch-proj"
#alias mnt="source ${MYGNDIR}/mnt"
#alias meld="source ${MYGNDIR}/bcompare"

# kt
#MYKTSH=$MYSHELLDIR/kt
#source $MYKTSH/repo
#alias put='source $MYKTSH/put $*'
#alias get='source $MYKTSH/get $*'
#alias merge='source $MYKTSH/merge $*'
#alias kt='source $MYKTSH/kt $*'
#alias rm-='source $MYKTSH/rm $*'
#alias mm-='source $MYKTSH/mm $*'

# alias copied from ubuntu. begin
if [[ ${THE_OS} == Darwin || ${THE_OS} == MINGW* ]]; then
    alias ll='ls -alF'
    alias la='ls -A'
    alias l='ls -CF'
fi
# alias copied from ubuntu. end

# added for bcompare. begin
if [[ ${THE_OS} == Darwin ]]; then
    if [ -f "/Applications/Beyond Compare.app/Contents/MacOS/bcomp" ]; then
        alias bcompare='/Applications/Beyond\ Compare.app/Contents/MacOS/bcomp'
    fi
elif [[ ${THE_OS} == MINGW* ]]; then
    if [ -f "D:/Beyond Compare 4/BCompare.exe" ]; then
        alias bcompare='/c/Program\ Files/Beyond\ Compare\ 4/BCompare.exe'
    fi
fi
# added for bcompare. end

# ftp servers:
#alias 99='nautilus ftp://10.10.100.99/liubzh'
#alias 100='nautilus ftp://10.10.100.100/liubzh'
#alias 100='nautilus ftp://10.10.100.100'
#alias 90='source $MYKTSH/90 $*'

# Other
#alias cq='clearquest &'
#alias vnccfg='vncconfig &'

# bash_completion.d
# Source the files in MYSHELLDIR/bash_completion.d/
MYCOMPLETEDIR=${MYSHELLDIR}/bash_completion.d
source ${MYCOMPLETEDIR}/adb
source ${MYCOMPLETEDIR}/c
source ${MYCOMPLETEDIR}/f
source ${MYCOMPLETEDIR}/g
source ${MYCOMPLETEDIR}/launch.sh
#source ${MYCOMPLETEDIR}/repo
source ${MYCOMPLETEDIR}/switch-proj
#source ${MYCOMPLETEDIR}/TmakeGionee
source ${MYCOMPLETEDIR}/v

# python
VIR_ENV_SH="/usr/local/bin/virtualenvwrapper.sh"
if [ -f $VIR_ENV_SH ]; then
    source $VIR_ENV_SH
fi

# java
# 如果想对所有用户进行配置
# 可以考虑写进 /etc/profile文件
#JAVA_HOME="$HOME/Development/java/jdk"
#JRE_HOME="$JAVA_HOME/jre"
#if [ -d "$JAVA_HOME" ]; then
#    export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH
#    export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
#fi

# undistract-me
UNDISTRACT_ME_SH="/usr/share/undistract-me/long-running.bash"
if [ -f "${UNDISTRACT_ME_SH}" ]; then
    source "${UNDISTRACT_ME_SH}"
    notify_when_long_running_commands_finish_install
fi

# eclipse for python
ECLIPSE="$HOME/Development/python/eclipse/eclipse"
if [ -f $ECLIPSE ]; then
    alias eclipse='$MY_ECLIPSE'
fi

# For Android. BEGIN
if [[ ${THE_OS} == Darwin ]]; then
    ANDROID_SDK_HOME="${HOME}/Library/Android/sdk"
elif [[ ${THE_OS} == MINGW* ]]; then
    ANDROID_SDK_HOME="D:/Android/Sdk"
else
    ANDROID_SDK_HOME="${HOME}/Develop/android/sdk"
fi
if [ -d "${ANDROID_SDK_HOME}" ]; then
    export PATH=${ANDROID_SDK_HOME}/platform-tools:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/tools/bin:$PATH
fi
ANDROID_STUDIO="$HOME/Develop/android/android-studio/bin/studio.sh"
if [ -f $ANDROID_STUDIO ]; then
    alias android-studio=$ANDROID_STUDIO
fi
# For Android. END

# wechat
WECHAT=${HOME}/Applications/wechat/electronic-wechat*/electronic-wechat
if [ -f $WECHAT ]; then
    alias wechat="$WECHAT"
fi

# dex-tools
DEX_TOOLS=${HOME}/Develop/android/decompile/dex2jar
if [ -d ${DEX_TOOLS} ]; then
    export PATH=${DEX_TOOLS}:${PATH}
fi

# ----- MTK ----- begin
function mtk_tools() {
    # gat
    MTK_GAT="${HOME}/Applications/gat-linux-x86_64-3/gat"
    if [ -f ${MTK_GAT} ]; then
        alias gat="${MTK_GAT}"
    fi
    MTK_LOGVIEW="${HOME}/Applications/gat-linux-x86_64-3/modules/MediatekLogView/MediatekLogView"
    if [ -f ${MTK_LOGVIEW} ]; then
        alias logviewer="${MTK_LOGVIEW}"
    fi
    # flash_tool
    MTK_FLASH_TOOL="${HOME}/Applications/SP_Flash_Tool/flash_tool.sh"
    if [ -f ${MTK_FLASH_TOOL} ]; then
        alias flash_tool="${MTK_FLASH_TOOL}"
    fi
}
# ----- MTK ----- end
