#!/bin/bash

######## Script Information. BGN ########
# Author: liubingzhao.
# Date: 2016-12-27
# Relative Completion: bash_completion.d/g
######## Script Information. END ########

function print_help() {
    cat << Help
$(gettext -s "g | Binzo's customized 'grep'")
$(gettext -s 'Usage: g <KEYWORD> [OPTIONS]... [FILE]...')
$(gettext -s "Search the keyword in specific file or directory")
$(gettext -s "Example:")
  g 'hello world' menu.h main.c
  g liubzh res/values-zh-rCN res/values-zh-rTW
  g 'liubzh ' --include .java --include strings.xml
$(gettext -s "You can view the bash_completion.d/g for more details about completion")

  <KEYWORD>            $(gettext -s "The keyword you want to search")
  [FILE]               $(gettext -s "The file(s) or directory(s) you want to search in")

$(gettext -s "OPTIONS"):
  -h, --help, ?        $(gettext -s "Display this help")
  -c, --count          $(gettext -s "Print only a count of matching lines per FILE")
  -C, --context <N>    $(gettext -s "Print N lines of output context")
  --include <PATTERN>  $(gettext -s "Search only files that match PATTERN")
                       $(gettext -s "Example:")
                         --include .java --include .c
                         --include string.xml
  --exclude <PATTERN>  $(gettext -s "Skip files matching PATTERN")
                       $(gettext -s "Example:")
                         --exclude .mk --exclude .make
  --exclude-dir <PATTERN>  $(gettext -s "Skip directories matching PATTERN")
                       $(gettext -s "Example:")
                         --exclude-dir .git --exclude-dir .svn
                       $(gettext -s "It can not be:")
                         --exclude-dir res/value
Help
}

# 解析参数并且进行有效性验证
# return    返回是否解析成功，若有非法参数返回1，OK返回0
function parse_and_check_args ()
{
    myparams=
    target=
    if [[ $1 == -h || $1 == --help || $1 == ? ]]; then
        print_help
        return 1
    else
        keyword="$1";shift # Shift the first argument(keyword) off.
    fi
    while [ $# -gt 0 ];do
        case "$1" in
            -h|--help|\?)
                print_help
                return 1    # exit.
                ;;
            --include)
                shift
                myparams+=" --include=*$1*"
                shift
                ;;
            --exclude)
                shift
                myparams+=" --exclude=*$1*"
                shift
                ;;
            --exclude-dir)
                shift
                # dir argument can not be a path, it should be a name.
                # so it can't contain character.
                if [[ $1 == */* ]]; then
                    echoE "Dir '$1' should not contain '/'"
                    return 1
                fi
                myparams+=" --exclude-dir=*$1*"
                shift
                ;;
            *)
                if [ -d $1 -o -f $1 ]; then
                    # If argument is a file path or directory path, add it to $target.
                    target+=" $1"
                else
                    # The arguments that we can not parse, append to $myparams directly.
                    myparams+=" $1"
                fi
                shift
                ;;
        esac
    done

    # 参数有效性验证
    if [ -z "${keyword}" ]; then
        echoE "Illegal argument.\nKeyword is lost."
        return 1
    fi
    if [[ ${keyword} == -* ]]; then
        echoE "Illegal argument.\nThe first argument should be the keyword you are searching.\nIt can not start with '-' or '--'"
        return 1
    fi

    return 0
}

# Internationalization and localization
# Set local language support. only for zh_CN.
# Reference directory: /usr/local/share/locale_
function set_localization() {
    export TEXTDOMAINDIR=$MYSHELLDIR/lang/locale
    export TEXTDOMAIN=grep
}

function unset_localization() {
    export TEXTDOMAINDIR=
    export TEXTDOMAIN=
}

set_localization

# Check arguments.
parse_and_check_args "$@"
case "$?" in
0)
    if [ -z "${target}" ]; then
        target=" ."
    fi
    echoW "Command: grep -rniR \"${keyword}\"${myparams}${target}"
    grep -rniR "${keyword}" ${myparams} --exclude-dir=.git ${target}
    ;;
esac

unset_localization
