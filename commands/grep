#!/bin/bash

######## Script Information. BGN ########
# Author: liubingzhao.
# Date: 2015-12-08
# Relative Completion: bash_completion.d/g
######## Script Information. END ########

# All the global variables in this script.
function init_global_variables() {
    myparams="-rniR"
    target=
    keyword=
    target=
}

function print_help() {
    cat << Help
$(gettxt "g | Binzo's customized 'grep'")
$(gettxt 'Usage: g <KEYWORD> [OPTIONS]... [FILE]...')
$(gettxt "Search the keyword in specific file or directory")
$(gettxt "Example:")
  g 'hello world' menu.h main.c
  g liubzh res/values-zh-rCN res/values-zh-rTW
  g 'liubzh ' --include .java --include strings.xml
$(gettxt "You can view the bash_completion.d/g for more details about completion")

  <KEYWORD>            $(gettxt "The keyword you want to search")
  [FILE]               $(gettxt "The file(s) or directory(s) you want to search in")

$(gettxt "OPTIONS"):
  -h, --help, ?        $(gettxt "Display this help")
  -c, --count          $(gettxt "Print only a count of matching lines per FILE")
  -C, --context <N>    $(gettxt "Print N lines of output context")
  --include <PATTERN>  $(gettxt "Search only files that match PATTERN")
                       $(gettxt "Example:")
                         --include .java --include .c
                         --include string.xml
  --exclude <PATTERN>  $(gettxt "Skip files matching PATTERN")
                       $(gettxt "Example:")
                         --exclude .mk --exclude .make
  --exclude-dir <PATTERN>  $(gettxt "Skip directories matching PATTERN")
                       $(gettxt "Example:")
                         --exclude-dir .git --exclude-dir .svn
                       $(gettxt "It can not be:")
                         --exclude-dir res/value
Help
}

# Parse and validate the arguments.
# return 0: ok
# return 1: invalid or print help.
function parse_and_check_args ()
{
    if [[ $1 != -h && $1 != --help && $1 != ? ]]; then
        keyword="$1";shift # Shift the first argument(keyword) off.
    fi
    while [ $# -gt 0 ];do
        case "$1" in
            -h|--help|\?)
                print_help
                return 1    # exit.
                ;;
            --noi)
                myparams=${myparams/i/}
                shift
                ;;
            --include)
                shift
                myparams="${myparams} --include=*$1*"
                shift
                ;;
            --exclude)
                shift
                myparams="${myparams} --exclude=*$1*"
                shift
                ;;
            --exclude-dir)
                shift
                # dir argument can not be a path, it should be a name.
                # so it can't contain character /.
                if [[ $1 == */* ]]; then
                    var="$1"
                    echoE "'${1}'" $(gettxt "should not contain '/'")
                    return 1
                fi
                myparams="${myparams} --exclude-dir=*$1*"
                shift
                ;;
            *)
                if [ -d $1 -o -f $1 ]; then
                    # If argument is a file path or directory path, add it to $target.
                    target="${target} $1"
                else
                    # The arguments that we can not parse, append to $myparams directly.
                    myparams="${myparams} $1"
                fi
                shift
                ;;
        esac
    done

    if [ -z "${keyword}" ]; then
        echoE $(gettxt "Illegal argument, please specify the keyword")
        return 1
    fi
    #if [[ ${keyword} == -* ]]; then
    #    echoE "Illegal argument.\nThe first argument should be the keyword you are searching.\nIt can not start with '-' or '--'"
    #    return 1
    #fi

    return 0
}

# Internationalization and localization
# Set local language support. only for zh_CN.
# Reference directory: /usr/local/share/locale
function set_localization() {
    export TEXTDOMAINDIR="${MYSHELLDIR}/lang/locale"
    export TEXTDOMAIN="grep"
}

function unset_localization() {
    unset TEXTDOMAINDIR
    unset TEXTDOMAIN
}

function main() {
    init_global_variables
    set_localization

    # Check arguments.
    parse_and_check_args "$@"
    case "$?" in
    0)
        if [ -z "${target}" ]; then
            target=" ."
        fi
        echoW "$(gettxt "Command"): grep \"${keyword}\" ${myparams}${target}"
        grep "${keyword}" ${myparams} --exclude-dir=.git ${target}
        ;;
    esac

    unset_localization
}

main "$@"
